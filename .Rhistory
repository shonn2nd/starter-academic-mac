negated_words %>%
mutate(contribution = abs(n * value))%>%
group_by(word1) %>%
arrange(desc(contribution) )
negated_words %>%
group_by(word1) %>%
mutate(contribution = abs(n * value)) %>%
arrange(desc(contribution))
negated_words %>%
mutate(contribution = abs(n * value)) %>%
arrange(word1, desc(contribution))
negated_words %>%
mutate(contribution = abs(n * value)) %>%
arrange(word1, desc(contribution)) %>% View()
negated_words %>%
mutate(contribution = abs(n * value)) %>%
arrange(word1, desc(contribution)) %>%
group_by(word1) %>%
mutate(word2 = reorder(word2, contribution)) %>%
ggplot(aes(n * value, word2, fill = n * value > 0)) +
geom_col(show.legend = FALSE) +
facet_wrap(~group, ncol = 2, scales = "free") +
labs(x = "Sentiment value * number of occurrences",
y = "Words preceded by \"not\"")
negated_words %>%
mutate(contribution = abs(n * value)) %>%
arrange(word1, desc(contribution)) %>%
group_by(word1) %>%
mutate(word2 = reorder(word2, contribution)) %>%
ggplot(aes(n * value, word2, fill = n * value > 0)) +
geom_col(show.legend = FALSE) +
facet_wrap(~word1, ncol = 2, scales = "free") +
labs(x = "Sentiment value * number of occurrences",
y = "Words preceded by \"not\"")
y = "Words preceded by negating words)
y = "Words preceded by negating words)
negated_words %>%
mutate(contribution = abs(n * value)) %>%
arrange(word1, desc(contribution)) %>%
group_by(word1) %>%
mutate(word2 = reorder(word2, contribution)) %>%
ggplot(aes(n * value, word2, fill = n * value > 0)) +
geom_col(show.legend = FALSE) +
facet_wrap(~word1, ncol = 2, scales = "free") +
labs(x = "Sentiment value * number of occurrences",
y = "Words preceded by negating words")
negated_words %>%
mutate(contribution = abs(n * value)) %>%
arrange(word1, desc(contribution))
negated_words %>%
mutate(contribution = abs(n * value)) %>%
arrange(word1, desc(contribution)) %>%
mutate(word2 = reorder(word2, contribution)) %>%
ggplot(aes(n * value, word2, fill = n * value > 0)) +
geom_col(show.legend = FALSE) +
facet_wrap(~word1, ncol = 2, scales = "free") +
labs(x = "Sentiment value * number of occurrences",
y = "Words preceded by negating words")
negated_words %>%
mutate(contribution = abs(n * value)) %>%
mutate(word2 = reorder(word2, contribution)) %>%
ggplot(aes(n * value, word2, fill = n * value > 0)) +
geom_col(show.legend = FALSE) +
facet_wrap(~word1, ncol = 2, scales = "free") +
labs(x = "Sentiment value * number of occurrences",
y = "Words preceded by negating words")
dimaonds
diamonds
diamonds %>% group_by(color) %>% arrange(desc(x))
diamonds %>% arrange(color, desc(x))
diamonds %>% arrange(color, desc(x)) %>% View()
diamonds %>% arrange(cut, desc(table))
diamonds %>% arrange(cut, desc(table)) %>% View()
d<-tibble(gender = c(0,0,0,1,1,1),)
d<-tibble(gender = c(0,0,0,1,1,1), value = c(7,1,4,2,9,6))
d
d %>% arrange(gender, desc(value))
d %>% arrange(desc(gender,value))
d %>% arrange(desc(gender), desc(value))
?arrange()
d
d %>% group_by(gender) %>% arrange(desc(value), .by_group = T)
negated_words %>%
mutate(contribution = abs(n * value)) %>%
group_by(word1) %>%
arrange(desc(contribution), .by_group = T)
negated_words %>%
mutate(contribution = abs(n * value)) %>%
mutate(word2 = reorder(word2, contribution)) %>%
ggplot(aes(n * value, word2, fill = n * value > 0)) +
geom_col(show.legend = FALSE) +
facet_wrap(~word1, ncol = 2, scales = "free") +
labs(x = "Sentiment value * number of occurrences",
y = "Words preceded by negating words")
?reorder
library(igraph)
#visualizing a network of bigrams
bigram_counts<-bigrams %>%
count(bigram, sort = TRUE)
View(bigram_counts)
bigram_graph <- bigram_counts %>%
filter(n > 20) %>%
graph_from_data_frame()
#visualizing a network of bigrams
bigram_counts<-bigrams %>%
count(bigram, sort = TRUE)
bigram_graph <- bigram_counts %>%
filter(n > 20) %>%
graph_from_data_frame()
bigram_graph
library(ggraph)
set.seed(2017)
ggraph(bigram_graph, layout = "fr") +
geom_edge_link() +
geom_node_point() +
geom_node_text(aes(label = name), vjust = 1, hjust = 1)
View(bigrams)
View(bigrams_united)
View(bigrams_separated)
#visualizing a network of bigrams
bigram_counts<-bigrams_united %>%
count(bigram, sort = TRUE)
bigram_graph <- bigram_counts %>%
filter(n > 20) %>%
graph_from_data_frame()
bigram_graph
set.seed(2017)
ggraph(bigram_graph, layout = "fr") +
geom_edge_link() +
geom_node_point() +
geom_node_text(aes(label = name), vjust = 1, hjust = 1)
#visualizing a network of bigrams
bigram_counts<-bigrams %>%
count(bigram, sort = TRUE)
bigram_graph <- bigram_counts %>%
filter(n > 20) %>%
graph_from_data_frame()
bigram_graph
set.seed(2017)
ggraph(bigram_graph, layout = "fr") +
geom_edge_link() +
geom_node_point() +
geom_node_text(aes(label = name), vjust = 1, hjust = 1)
#visualizing a network of bigrams
bigrams_filtered <- bigrams_separated %>%
filter(!word1 %in% stop_words$word) %>%
filter(!word2 %in% stop_words$word)
View(bigrams_filtered)
bigram_counts <- bigrams_filtered %>%
count(word1, word2, sort = TRUE)
View(bigram_counts)
bigram_counts
bigram_graph <- bigram_counts %>%
filter(n > 2) %>%
graph_from_data_frame()
bigram_graph
set.seed(2017)
ggraph(bigram_graph, layout = "fr") +
geom_edge_link() +
geom_node_point() +
geom_node_text(aes(label = name), vjust = 1, hjust = 1)
bigram_graph <- bigram_counts %>%
filter(n > 5) %>%
graph_from_data_frame()
bigram_graph
set.seed(2017)
ggraph(bigram_graph, layout = "fr") +
geom_edge_link() +
geom_node_point() +
geom_node_text(aes(label = name), vjust = 1, hjust = 1)
bigram_graph <- bigram_counts %>%
filter(n > 4) %>%
graph_from_data_frame()
bigram_graph
set.seed(2017)
ggraph(bigram_graph, layout = "fr") +
geom_edge_link() +
geom_node_point() +
geom_node_text(aes(label = name), vjust = 1, hjust = 1)
bigram_graph
set.seed(2020)
a <- grid::arrow(type = "closed", length = unit(.15, "inches"))
ggraph(bigram_graph, layout = "fr") +
geom_edge_link(aes(edge_alpha = n), show.legend = FALSE,
arrow = a, end_cap = circle(.07, 'inches')) +
geom_node_point(color = "lightblue", size = 5) +
geom_node_text(aes(label = name), vjust = 1, hjust = 1) +
theme_void()
library(blogdown)
blogdown:::serve_site()
library(blogdown)
blogdown:::serve_site()
knitr::opts_chunk$set(echo = TRUE)
library(rvest)
library(rvest)
library(xml2)
library(tidyverse)
hot100page <- "https://zh.wikipedia.org/wiki/%E7%8E%8B%E5%BB%BA%E6%B0%91_(%E6%A3%92%E7%90%83%E5%93%A1)"
hot100 <- read_html(hot100page)
View(hot100)
hot100page <- "https://zh.wikipedia.org/wiki/%E7%8E%8B%E5%BB%BA%E6%B0%91_(%E6%A3%92%E7%90%83%E5%93%A1)"
hot100 <- read_html(hot100page)
hot100
str(hot100)
View(hot100)
xml_child(hot100, 2)
hot100 %>%
html_node("body") %>%
html_children()
body_nodes
body_nodes <- hot100 %>%
html_node("body") %>%
html_children()
body_nodes
body_nodes %>%
html_children()
bio <- hot100 %>%
rvest::html_nodes('body') %>%
xml2::xml_find_all("//div[contains(@class, 'mw-body-content mw-content-ltr')]") %>%
rvest::html_text()
bio_df <- data.frame(bio)
View(bio_df)
bio
gsub("臺灣出生大聯盟選手列表","\\1",bio_df)
gsub("臺灣出生大聯盟選手列表","\\1",bio_df)
gsub("^臺灣出生大聯盟選手列表","\\1",bio_df)
gsub("^臺灣出生大聯盟選手列表",,bio_df)
gsub("^臺灣出生大聯盟選手列表","\\1",bio_df)
x <- c("Copyright © The Society of Geomagnetism and Earth © 2013 Chinese National Committee")
x
str_remove(x, "^Chinese")
gsub("Chinese","",x)
gsub("^Chinese","",x)
gsub("Chinese.*","",x)
gsub("臺灣出生大聯盟選手列表.*","",bio_df)
bio_df<-gsub("臺灣出生大聯盟選手列表.*","",bio_df)
bio_df %>%
unnest_tokens(word, V1)
library(tidytext)
bio_df %>%
unnest_tokens(word, V1)
class(bio_df)
bio_df <- data.frame(biodf)
bio_df <- data.frame(bio_df)
bio_df<-bio_df %>% rename(text = 1)
bio_df %>%
unnest_tokens(word, text)
toks<-bio_df %>%
unnest_tokens(word, text)
View(toks)
bio_df %>%
unnest_tokens(word, text) %>% filter(str_detect([:digit:]))
bio_df %>%
unnest_tokens(word, text) %>% filter(str_detect("[:digit:]"))
bio_df %>%
unnest_tokens(word, text)
bio_df %>%
unnest_tokens(word, text) %>%  filter(str_detect(word, "[:digit:]"))
bio_df %>%
unnest_tokens(word, text) %>%  filter(!str_detect(word, "[:digit:]"))
bio_df %>%
unnest_tokens(word, text) %>%  filter(!str_detect(word, "[:digit:]") &
!str_detect(word, "[a-c]"))
bio_df %>%
unnest_tokens(word, text) %>%  filter(!str_detect(word, "[:digit:]") &
!str_detect(word, "[a-z]"))
bio_df %>%
unnest_tokens(word, text) %>%  filter(!str_detect(word, "[:digit:]") &
!str_detect(word, "[a-z]")) %>% View()
toks<-bio_df %>%
unnest_tokens(word, text) %>%  filter(!str_detect(word, "[:digit:]") &
!str_detect(word, "[a-z]"))
toks
toks %>% count(word)
toks%>%
count(word, sort = TRUE) %>%
filter(n > 60) %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(n, word)) +
geom_col() +
labs(y = NULL)
toks%>%
count(word, sort = TRUE) %>%
filter(n > 60) %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(n, word)) +
geom_col() +
labs(y = NULL)
library(showtext)
showtext_auto()
toks%>%
count(word, sort = TRUE) %>%
filter(n > 60) %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(n, word)) +
geom_col() +
labs(y = NULL)
toks%>%
count(word, sort = TRUE) %>%
filter(n > 60) %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(n, word)) +
geom_col() +
labs(y = NULL) +
labs(x = "Frequency")
bio_df<-bio_df %>%
filter(!str_detect(word, "[:digit:]") &
!str_detect(word, "[a-z]"))
bio_df<-bio_df %>%
filter(!str_detect(text, "[:digit:]") &
!str_detect(text, "[a-z]"))
View(bio_df)
bio_df <- data.frame(bio)
bio_df<-gsub("臺灣出生大聯盟選手列表.*","",bio_df)
bio_df <- data.frame(bio_df)
bio_df<-bio_df %>% rename(text = 1)
bio_df %>%
str_remove(text, "[:digit:]", "")
?str_remove
View(bio_df)
bio_df %>%
str_remove(text, "[:digit:]")
bio_df$text %>%
str_remove("[:digit:]")
bio_df$text %>%
str_remove_all("[:digit:]")
bio_df$text %>%
str_replace_all("[:digit:]", "")
bio_df$text %>%
str_replace_all("[:digit:]", " ")
bio_df$text %>%
str_replace_all("[:digit:]")
bio_df$text %>%
str_replace_all("[:digit:]", "")
bio_df$text %>%
str_replace_all("[:digit:]", "") %>%
str_replace_all("[a-z]", "")
bio_df$text %>%
str_remove_all("[:digit:]", "") %>%
str_remove_all("[a-z]", "")
bio_df$text %>%
str_remove_all("[:digit:]") %>%
str_remove_all("[a-z]")
bio_df$text %>%
str_remove_all("[:digit:]") %>%
str_remove_all("[a-z]") %>%
str_remove_all("\n") %>%
unnest_tokens(bigram, text, token = "ngrams", n = 2)
bio_df$text %>%
str_remove_all("[:digit:]") %>%
str_remove_all("[a-z]") %>%
str_remove_all(" \n") %>%
unnest_tokens(bigram, text, token = "ngrams", n = 2)
bio_df$text %>%
str_remove_all("[:digit:]") %>%
str_remove_all("[a-z]")
bio_df
bio_df$text %>%
str_remove_all("\\n")
bio_df$text %>%
str_remove_all("\\n|[:digit:]")
bio_df$text %>%
str_remove_all("\\n|:digit:")
bio_df$text %>%
str_remove_all("\\n|[[:digit:]]")
bio_df$text %>%
str_remove_all("\\n|[:digit:]")
bio_df$text %>%
str_remove_all("\\n|[:digit:]|[a-z]|[A-Z]")
bio_df$text %>%
str_remove_all("\\n|[:digit:]|[:lower:]|[:upper:]")
bio_df$text %>%
str_remove_all("\\n|[:digit:]|[:lower:]|[:upper:]|[:punct:]")
bido_df<-bio_df$text %>%
str_remove_all("\\n|[:digit:]|[:lower:]|[:upper:]|[:punct:]")
bio_df$text
bido_df$text<-bio_df$text %>%
str_remove_all("\\n|[:digit:]|[:lower:]|[:upper:]|[:punct:]")
bio_df <- data.frame(bio)
bio_df<-gsub("臺灣出生大聯盟選手列表.*","",bio_df)
bio_df <- data.frame(bio_df)
bio_df<-bio_df %>% rename(text = 1)
bio_clean<-bio_df$text %>%
str_remove_all("\\n|[:digit:]|[:lower:]|[:upper:]|[:punct:]")
bio_clean
bio_clean<-bio_df$text %>%
str_remove_all("\\n|[:digit:]|[:lower:]|[:upper:]|[:punct:]") %>% as.data.frame()
View(bio_clean)
bio_clean<-bio_df$text %>%
str_remove_all("\\n|[:digit:]|[:lower:]|[:upper:]|[:punct:]") %>% as.data.frame() %>% rename(text = 1)
bio_clean %>% unnest_tokens(bigram, text, token = "ngrams", n = 2)
bio_clean %>% unnest_tokens(bigram, text, token = "ngrams", n = 3)
toks<-bio_clean %>% unnest_tokens(bigram, text, token = "ngrams", n = 3)
toks%>%
count(word, sort = TRUE) %>%
filter(n > 60) %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(n, word)) +
geom_col() +
labs(y = NULL) +
labs(x = "Frequency")
View(toks)
toks<-bio_clean %>% unnest_tokens(word, text, token = "ngrams", n = 3)
toks%>%
count(word, sort = TRUE) %>%
filter(n > 60) %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(n, word)) +
geom_col() +
labs(y = NULL) +
labs(x = "Frequency")
toks%>%
count(word, sort = TRUE) %>%
filter(n > 20) %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(n, word)) +
geom_col() +
labs(y = NULL) +
labs(x = "Frequency")
toks%>%
count(word, sort = TRUE) %>%
filter(n > 1) %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(n, word)) +
geom_col() +
labs(y = NULL) +
labs(x = "Frequency")
toks%>%
count(word, sort = TRUE) %>%
filter(n > 2) %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(n, word)) +
geom_col() +
labs(y = NULL) +
labs(x = "Frequency")
toks%>%
count(word, sort = TRUE) %>%
filter(n > 4) %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(n, word)) +
geom_col() +
labs(y = NULL) +
labs(x = "Frequency")
toks%>%
count(word, sort = TRUE) %>%
filter(n > 5) %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(n, word)) +
geom_col() +
labs(y = NULL) +
labs(x = "Frequency")
toks<-bio_clean %>% unnest_tokens(word, text, token = "ngrams", n = 2)
toks%>%
count(word, sort = TRUE) %>%
filter(n > 5) %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(n, word)) +
geom_col() +
labs(y = NULL) +
labs(x = "Frequency")
toks%>%
count(word, sort = TRUE) %>%
filter(n > 10) %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(n, word)) +
geom_col() +
labs(y = NULL) +
labs(x = "Frequency")
toks%>%
count(word, sort = TRUE) %>%
filter(n > 20) %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(n, word)) +
geom_col() +
labs(y = NULL) +
labs(x = "Frequency")
toks%>%
count(word, sort = TRUE) %>%
filter(n > 8) %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(n, word)) +
geom_col() +
labs(y = NULL) +
labs(x = "Frequency")
library(blogdown)
blogdown:::serve_site()
rm(list=ls())
knitr::opts_chunk$set(echo = TRUE)
```{r, message=F}
```{r message=FALSE}
#loading necessary packages
library(rvest)
library(xml2)
library(tidyverse)
library(tidytext)
img1_path <- "images/tn.png"
img1 <- readPNG(img1_path, native = TRUE, info = TRUE)
library(png)
img1 <- readPNG(img1_path, native = TRUE, info = TRUE)
img1_path
library(png)
img1 <- readPNG(img1_path, native = TRUE, info = TRUE)
img1_path <- "/Users/shsu/OneDrive/website/starter-academic-mac/content/post/chinese character in ggplot/wang.png"
img1 <- readPNG(img1_path, native = TRUE, info = TRUE)
img1
include_graphics(img1_path)
library(knitr)
include_graphics(img1_path)
blogdown:::serve_site()
img1
img1_path <- "/Users/shsu/OneDrive/website/starter-academic-mac/content/post/chinese character in ggplot/wang.png"
include_graphics(img1_path)
